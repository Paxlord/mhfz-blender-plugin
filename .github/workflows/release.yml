name: Release FMOD Importer

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version info
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Update version in bl_info (optional)
        run: |
          # Update the version in your __init__.py if you want
          # This is optional - you might prefer to do this manually
          sed -i 's/"version": (.*),/"version": (${{ steps.get_version.outputs.VERSION_NUMBER | replace('.', ', ') }}),/' src/__init__.py

      - name: Create release archive
        run: |
          # Create a properly named zip file
          zip -r fmod_importer_${{ steps.get_version.outputs.VERSION }}.zip ./src -q

          # Also create a generic name for consistency
          cp fmod_importer_${{ steps.get_version.outputs.VERSION }}.zip fmod_importer.zip

          # Show what we've created
          ls -la *.zip

      - name: Generate changelog (if you have one)
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract changelog for this version (basic implementation)
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            awk '/^## \[${{ steps.get_version.outputs.VERSION }}\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=No changelog available for this release." >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: FMOD Importer ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## FMOD Importer ${{ steps.get_version.outputs.VERSION }}

            Blender plugin for importing FMOD model files (.fmod) from Monster Hunter Frontier Z.

            ### Installation
            1. Download the `fmod_importer.zip` file below
            2. In Blender, go to Edit > Preferences > Add-ons
            3. Click "Install..." and select the downloaded zip file
            4. Enable the "FMOD Importer" addon

            ### Features
            - Import FMOD (.fmod) model files
            - Export FMOD files from Blender
            - Support for textures, materials, and skeletal data
            - Weapon setup tools for various Monster Hunter weapon types

            ### Changes in this version
            ${{ steps.changelog.outputs.CHANGELOG }}

            ---

            **Blender Compatibility**: 3.0+
            **File Size**: $(stat -c%s fmod_importer.zip | numfmt --to=iec-i)B
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'alpha') || contains(steps.get_version.outputs.VERSION, 'beta') || contains(steps.get_version.outputs.VERSION, 'rc') }}

      - name: Upload Release Asset (versioned)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fmod_importer_${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: fmod_importer_${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (generic name)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fmod_importer.zip
          asset_name: fmod_importer.zip
          asset_content_type: application/zip
